{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/albums/albumDisplay.html","webpack:///./src/app/albums/albumDisplay.ts","webpack:///./src/app/albums/albumEditor.html","webpack:///./src/app/albums/albumEditor.ts","webpack:///./src/app/albums/albumList.html","webpack:///./src/app/albums/albumList.ts","webpack:///./src/app/albums/albumService.ts","webpack:///./src/app/albums/albumSongList.html","webpack:///./src/app/albums/albumSongList.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/artists/artistDisplay.html","webpack:///./src/app/artists/artistDisplay.ts","webpack:///./src/app/artists/artistEditor.html","webpack:///./src/app/artists/artistEditor.ts","webpack:///./src/app/artists/artistList.html","webpack:///./src/app/artists/artistList.ts","webpack:///./src/app/artists/artistService.ts","webpack:///./src/app/business/appConfiguration.ts","webpack:///./src/app/business/entities.ts","webpack:///./src/app/business/userInfo.ts","webpack:///./src/app/common/animations.ts","webpack:///./src/app/common/appFooter.html","webpack:///./src/app/common/appFooter.ts","webpack:///./src/app/common/appHeader.html","webpack:///./src/app/common/appHeader.ts","webpack:///./src/app/common/errorDisplay.ts","webpack:///./src/app/common/login.html","webpack:///./src/app/common/login.ts","webpack:///./src/app/options/about.html","webpack:///./src/app/options/about.ts","webpack:///./src/app/options/options.html","webpack:///./src/app/options/options.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"<div  class=\\\"container\\\" >\\n\\n  <div class=\\\"btn-group\\\" style=\\\"margin-bottom: 10px;\\\">\\n    <a routerLink=\\\"/albums\\\" class=\\\"btn btn-sm btn-default\\\"><i class=\\\"fa fa-list\\\"></i> Albums</a>\\n    <a [routerLink]=\\\"['/album/edit',album.Id]\\\" class=\\\"btn btn-sm btn-default\\\"><i class=\\\"fa fa-edit\\\"></i> Edit</a>\\n    <a [href]=\\\"album.AmazonUrl\\\" class=\\\"btn btn-sm btn-default\\\"><i class=\\\"fa fa-dollar\\\"></i> Buy</a>\\n\\n    <a [href]=\\\"album.SpotifyUrl\\\" class=\\\"btn btn-sm btn-default\\\"><i class=\\\"fa fa-volume-up\\\"></i> Listen</a>\\n    <button (click)=\\\"deleteAlbum(album)\\\" class=\\\"btn btn-sm btn-default\\\"><i class=\\\"fa fa-remove\\\"></i> Delete</button>\\n  </div>\\n\\n  <div class=\\\"separator\\\"></div>\\n\\n  <error-display [error]=\\\"error\\\"></error-display>\\n\\n  <div class=\\\"row\\\" [@slideIn]=\\\"'in'\\\">\\n    <div class=\\\"col-sm-3\\\">\\n      <img [src]=\\\"album.ImageUrl\\\" *ngIf=\\\"album.ImageUrl\\\" class=\\\"album-image-big\\\" />\\n    </div>\\n    <div class=\\\"col-sm-9\\\">\\n      <h2 class=\\\"album-title-big\\\">\\n        {{album.Title}}\\n      </h2>\\n\\n      <div class=\\\"album-artist\\\">\\n\\n        by <a [routerLink]=\\\"['/artist',album.ArtistId]\\\">{{album.Artist.ArtistName}}</a>\\n        {{(album.Year ? 'in ' + album.Year : '')}}\\n      </div>\\n      <div [innerHTML]=\\\"album.Description\\\" class=\\\"line-breaks\\\"></div>\\n\\n      <div style=\\\"margin: 10px 0\\\" class=\\\"pull-right\\\">\\n        &nbsp;\\n        <a *ngIf=\\\"album.AmazonUrl\\\" [href]=\\\"album.AmazonUrl\\\" class=\\\"btn btn-link btn-sm\\\" target=\\\"_amazon\\\"><i class=\\\"fa fa-dollar\\\"></i> Buy</a> &nbsp;&nbsp;\\n        <a *ngIf=\\\"album.SpotifyUrl\\\" [href]=\\\"album.SpotifyUrl\\\" class=\\\"btn btn-link btn-sm\\\" target=\\\"_spotify\\\"><i class=\\\"fa fa-volume-up\\\"></i> Play</a>\\n      </div>\\n\\n\\n      <album-songlist [tracks]=\\\"album.Tracks\\\"></album-songlist>\\n\\n      <!--<table class=\\\" table table-striped small\\\">-->\\n        <!--<tr *ngFor=\\\"let song of album.Tracks\\\">-->\\n          <!--<td>{{song.SongName}}</td>-->\\n          <!--<td>{{song.Length}}</td>-->\\n        <!--</tr>-->\\n      <!--</table>-->\\n\\n      <hr />\\n      More from\\n      <a [routerLink]=\\\"['/artist',album.ArtistId]\\\">\\n        {{album.Artist.ArtistName}}<br />\\n        <img *ngIf=\\\"album.Artist.ImageUrl\\\" [src]=\\\"album.Artist.ImageUrl\\\"\\n             style=\\\"height: 100px; border-radius: 5px;box-shadow: 2px 2px 3px #535353\\\" />\\n      </a>\\n    </div>\\n  </div>\\n</div>\\n\"","﻿import {Album} from './../business/entities';\nimport {Component, OnInit, Input, OnDestroy} from '@angular/core';\nimport {style, animate, state, transition, trigger} from '@angular/animations';\nimport {AlbumService} from \"./albumService\";\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport {ErrorInfo} from \"../common/errorDisplay\";\nimport {AppConfiguration} from \"../business/appConfiguration\";\nimport {slideIn, slideInLeft} from \"../common/animations\";\n\n@Component({\n    selector: 'album-display',\n    templateUrl: './albumDisplay.html',\n    animations: [ slideIn ]\n})\nexport class AlbumDisplay implements OnInit {\n\n  @Input() album:Album = new Album();\n  error = new ErrorInfo();\n  aniFrame = 'in';\n\n  constructor(private route: ActivatedRoute,\n              private router: Router,\n              private config: AppConfiguration,\n              private albumService: AlbumService) {\n  }\n\n  ngOnInit() {\n    this.config.isSearchAllowed = false;\n    this.config.activeTab = \"albums\";\n    this.aniFrame = 'in';\n\n    //console.log(\"AlbumDisplay\");\n    if(!this.album.Title) {\n      var id = this.route.snapshot.params[\"id\"];\n      if (id < 1)\n        return;\n\n      this.albumService.getAlbum(id)\n        .subscribe( result => {\n          this.album = result;\n        }, err => this.error.error(err));\n    }\n  }\n\n  ngOnDestroy() {\n    this.aniFrame = 'out';\n    console.log(\"ngDestroy\")\n  }\n\n  deleteAlbum(album) {\n    this.albumService.deleteAlbum(album)\n      .subscribe( result =>{\n        this.error.info(\"Album '\"  + album.Title + \"' has been deleted.\");\n        setTimeout(() => this.router.navigate([\"/albums\"]), 1500);          \n      },\n      (err)=> this.error.error(err));\n  }\n\n}\n","module.exports = \"<div class=\\\"container\\\"  >\\n\\n  <div *ngIf=\\\"album.Id !== 0\\\" class=\\\"btn-group\\\" style=\\\"margin-bottom: 10px;\\\">\\n    <a routerLink=\\\"/albums\\\" class=\\\"btn btn-sm btn-default\\\"><i class=\\\"fa fa-list\\\"></i> List</a>\\n    <a [routerLink]=\\\"['/album',album.Id]\\\" class=\\\"btn btn-sm btn-default\\\"><i class=\\\"fa fa-eye\\\"></i> View</a>\\n    <a [href]=\\\"album.AmazonUrl\\\" class=\\\"btn btn-sm btn-default\\\"><i class=\\\"fa fa-dollar\\\"></i> Buy</a>\\n  </div>\\n\\n  <div class=\\\"separator\\\"></div>\\n\\n  <error-display [error]=\\\"error\\\"></error-display>\\n\\n  <div class=\\\"row\\\"  [ngClass]=\\\"{ 'hidden': !loaded}\\\" [@slideIn]=\\\"'in'\\\">\\n\\n    <div class=\\\"col-sm-5\\\">\\n      <form name=\\\"form1\\\" action=\\\"javascript:{}\\\" #form1=\\\"ngForm\\\" novalidate>\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"AlbumName\\\">Album Name:</label>\\n          <input id=\\\"AlbumName\\\" type=\\\"text\\\" class=\\\"form-control input-sm\\\"\\n                 placeholder=\\\"Album Name\\\"\\n                 name=\\\"Title\\\" required\\n                 [(ngModel)]=\\\"album.Title\\\" autofocus />\\n\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"BandName\\\">Band Name:</label>\\n          <input type=\\\"text\\\" class=\\\"form-control input-sm typeahead\\\" id=\\\"BandName\\\"\\n                 required\\n                 autocomplete=\\\"off\\\"\\n                 data-provide=\\\"typeahead\\\"\\n                 placeholder=\\\"Band Name\\\"\\n                 name=\\\"ArtistName\\\"\\n                 [(ngModel)]=\\\"album.Artist.ArtistName\\\" />\\n\\n\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"Description\\\">Album Description:</label>\\n          <textarea class=\\\"form-control input-sm\\\" id=\\\"Description\\\"\\n                    placeholder=\\\"Album description or review\\\"\\n                    required\\n                    [(ngModel)]=\\\"album.Description\\\"\\n                    name=\\\"Description\\\"\\n                    style=\\\"height: 115px\\\"></textarea>\\n\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n          <div class=\\\"input-group\\\">\\n            <span class=\\\"input-group-addon\\\" title=\\\"Image Url\\\"><i class=\\\"fa fa-image fa-fw\\\"></i></span>\\n            <input type=\\\"text\\\" class=\\\"form-control input-sm\\\" id=\\\"ImageUrl\\\"\\n                   required\\n                   name=\\\"ImageUrl\\\"\\n                   placeholder=\\\"Image Url\\\" [(ngModel)]=\\\"album.ImageUrl\\\" />\\n\\n          </div>\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n          <div class=\\\"input-group\\\">\\n            <span class=\\\"input-group-addon\\\" title=\\\"Url where to buy\\\"><i class=\\\"fa fa-dollar fa-fw\\\"></i></span>\\n            <input type=\\\"text\\\" class=\\\"form-control input-sm\\\" id=\\\"AmazonUrl\\\"\\n                   placeholder=\\\"Purchase Url\\\"\\n                   name=\\\"AmazonUrl\\\"\\n                   [(ngModel)]=\\\"album.AmazonUrl\\\"/>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n          <div class=\\\"input-group\\\">\\n            <span class=\\\"input-group-addon\\\" title=\\\"Url where to buy\\\"><i class=\\\"fa fa-spotify fa-fw\\\"></i></span>\\n            <input type=\\\"text\\\" class=\\\"form-control input-sm\\\" id=\\\"SpotifyUrl\\\"\\n                   placeholder=\\\"Listen Url\\\"\\n                   name=\\\"SpotifyUrl\\\"\\n                   [(ngModel)]=\\\"album.SpotifyUrl\\\" />\\n          </div>\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"YearReleased\\\">Year released:</label>\\n          <input type=\\\"number\\\" class=\\\"form-control input-sm\\\" id=\\\"YearReleased\\\"\\n                 required\\n                 name=\\\"Year\\\"\\n                 placeholder=\\\"Year of album release\\\"\\n                 [(ngModel)]=\\\"album.Year\\\"/>\\n        </div>\\n\\n        <hr/>\\n\\n        <album-songlist [tracks]=\\\"album.Tracks\\\" [allowEditing]=\\\"true\\\"></album-songlist>\\n\\n        <div class=\\\"well well-sm\\\">\\n          <button type=\\\"submit\\\" (click)=\\\"saveAlbum(album)\\\"\\n                  class=\\\"btn btn-success\\\"\\n                  [disabled]=\\\"form1.invalid\\\" accesskey=\\\"S\\\">\\n            <i class=\\\"fa fa-check\\\"></i> Save Track\\n          </button>\\n          <a [routerLink]=\\\"['/album',album.Id]\\\" class=\\\"btn btn-default\\\">\\n            <i class=\\\"fa fa-remove\\\"></i> Cancel\\n          </a>\\n        </div>\\n\\n        <div class=\\\"separator\\\"></div>\\n\\n      </form>\\n    </div>\\n\\n    <div class=\\\"col-sm-7\\\">\\n      <h3>Preview</h3>\\n      <img [src]=\\\"album.ImageUrl\\\" onerror=\\\"this.src=''\\\" class=\\\"album-image-big\\\"/>\\n      <div style=\\\"margin-top: 10px;\\\">\\n        <h2 class=\\\"album-title-big\\\">{{album.Title}}</h2>\\n        <div class=\\\"album-artist\\\">by {{album.Artist.ArtistName}} {{(album.Year ? 'in ' + album.Year : '')}}\\n          - <a [href]=\\\"album.AmazonUrl\\\" *ngIf=\\\"album.AmazonUrl\\\"><i class=\\\"fa fa-dollar\\\"></i> Buy on Amazon</a>\\n        </div>\\n        <div class=\\\"album-descript line-breaks\\\" [innerHTML]=\\\"album.Description\\\"></div>\\n\\n        <hr/>\\n\\n        <album-songlist [tracks]=\\\"album.Tracks\\\"></album-songlist>\\n\\n      </div>\\n    </div>\\n\\n\\n  </div>\\n\\n</div>\\n\"","﻿import {Component, OnInit, ElementRef} from '@angular/core';\nimport {Album} from \"../business/entities\";\nimport {AlbumService} from \"./albumService\";\nimport {Router, ActivatedRoute} from \"@angular/router\";\nimport {ErrorInfo} from \"../common/errorDisplay\";\nimport {AppConfiguration} from \"../business/appConfiguration\";\nimport {UserInfo} from \"../business/userInfo\";\n\n//declare var $:any ;\ndeclare var $:any;\ndeclare var toastr:any;\ndeclare var window:any;\n\nimport {slideInLeft, slideIn} from \"../common/animations\";\n\n@Component({\n    selector: 'album-editor',\n    templateUrl: 'albumEditor.html',\n    animations: [ slideIn ]\n})\nexport class AlbumEditor implements OnInit {\n  constructor(private route: ActivatedRoute,\n              private router: Router,\n              private albumService: AlbumService,\n              private config:AppConfiguration,\n              private user:UserInfo) {\n  }\n\n  album: Album = new Album();\n  error: ErrorInfo = new ErrorInfo();\n  loaded =  false;\n  aniFrame = 'in';\n\n  ngOnInit() {\n    if (!this.user.isAuthenticated) {\n      this.router.navigate(['/login']);\n      return;\n    }\n\n    this.config.isSearchAllowed = false;\n    this.bandTypeAhead();\n\n\n    var id = this.route.snapshot.params[\"id\"];\n    if (id < 1) {\n        this.loaded = true;\n        this.album = this.albumService.newAlbum();\n        return;\n    }\n\n\n\n    this.albumService.getAlbum(id)\n      .subscribe(result => {\n          this.album = result;\n          this.loaded = true;\n        },\n        err => {\n          this.error.error(err);\n        });\n  }\n\n  saveAlbum(album) {\n    return this.albumService.saveAlbum(album)\n      .subscribe((album: Album) => {\n          var msg = album.Title + \" has been saved.\"\n          this.error.info(msg);\n          toastr.success(msg);\n          window.document.getElementById(\"MainView\").scrollTop = 0;\n\n          setTimeout(function () {\n            this.router.navigate([\"/album\", album.Id]);\n          }, 1500)\n        },\n        err => {\n          let msg = `Unable to save album: ${err.message}`;\n          this.error.error(msg);\n          toastr.error(msg);\n\n          if (err.response && err.response.status == 401) {\n            this.user.isAuthenticated = false;\n            this.router.navigate([\"login\"]);\n          }\n        });\n  };\n\n  bandTypeAhead() {\n    var $input:any = $(\"#BandName\");\n    var config = this.config;\n\n    // delay slightly to ensure that the\n    // typeahead component is loaded when\n    // doing a full browser refresh\n    setTimeout( function () {\n        $input.typeahead({\n            source: [],\n            autoselect: true,\n            minLength: 0\n        });\n\n        $input.keyup( function() {\n          let s = $(this).val();\n          let url = config.urls.url(\"artistLookup\") + s;\n\n          $.getJSON(url,\n              (data) => {\n                  $input.data('typeahead').source = data;\n              });\n        });\n\n    },1000);\n\n    }\n}\n","module.exports = \"<div class=\\\"container container-fluid slide-animation\\\" [@slideIn]=\\\"'in'\\\">\\n\\n    <error-display [error]=\\\"error\\\"></error-display>\\n\\n    <a routerLink=\\\"/album/edit/0\\\" class=\\\"btn btn-sm btn-success pull-right\\\" (sclick)=\\\"addAlbum()\\\"><i class=\\\"fa fa-plus\\\"></i> Add Album</a>\\n    <div class=\\\"page-header-text\\\">\\n        <i class=\\\"fa fa-list\\\">\\n        </i> Albums <span class=\\\"badge\\\">{{filteredAlbumList.length}}</span>\\n    </div>\\n\\n    <div class=\\\"container\\\" *ngIf=\\\"busy\\\">\\n        <i class=\\\"fa fa-circle-o-notch fa-spin fa-5x\\\"\\n           style=\\\"display: block; text-align: center; margin-top: 70px;\\\"></i>\\n    </div>\\n\\n\\n    <a class=\\\"album\\\" role=\\\"button\\\" style=\\\"text-decoration: none; color: inherit\\\"\\n         *ngFor=\\\"let album of filteredAlbumList\\\"\\n         (click)=\\\"albumClick(album)\\\" >\\n\\n        <div class=\\\"album-overlay\\\">\\n            <a routerLink=\\\"['/album/edit',{{album.Id}}]\\\">\\n              <i class=\\\"fa fa-edit\\\" title=\\\"Edit\\\"></i>\\n            </a>\\n            &nbsp;\\n            <a (click)=\\\"deleteAlbum(album)\\\">\\n              <i class=\\\"fa fa-remove\\\" title=\\\"Delete\\\"></i>\\n            </a>\\n        </div>\\n\\n        <div>\\n            <img [src]=\\\"album.ImageUrl\\\" class=\\\"album-image\\\" />\\n            <div style=\\\"padding-left: 80px;\\\">\\n                <div class=\\\"album-title\\\">{{album.Title}}</div>\\n                <div class=\\\"album-artist\\\">by <b>{{album.Artist.ArtistName}}</b> {{(album.Year ? 'in ' + album.Year : '')}}</div>\\n                <div class=\\\"album-descript\\\">{{album.Description}}</div>\\n            </div>\\n        </div>\\n    </a>\\n</div>\\n\"","﻿import {Component, OnInit } from '@angular/core';\nimport { AlbumService } from './albumService';\nimport { Album } from '../business/entities';\n\nimport {AppConfiguration} from \"../business/appConfiguration\";\nimport {Router} from \"@angular/router\";\nimport {ErrorInfo} from \"../common/errorDisplay\";\nimport {slideIn, slideInLeft} from \"../common/animations\";\nimport { UserInfo } from \"../business/userInfo\";\n\ndeclare var $:any;\ndeclare var toastr:any;\n\n\n@Component({\n  selector: 'album-list',\n  templateUrl: './albumList.html',\n  animations: [ slideIn ]\n})\nexport class AlbumList implements OnInit {\n\n  constructor(private router:Router,\n              private albumService: AlbumService,\n              private config: AppConfiguration) {\n  }\n\n  albumList: Album[] = [];\n  busy: boolean = true;\n  error:ErrorInfo = new ErrorInfo();\n\n\n  ngOnInit() {\n    this.getAlbums();\n\n    this.config.isSearchAllowed = true;\n    this.config.activeTab = \"albums\";\n    this.config.searchText = \"\";\n\n    // ??? Non-DOM way to do this?\n    setTimeout(() => {        \n      $(\"#SearchBox\").focus();\n    },200);\n  }\n\n  get filteredAlbumList() {\n    if (this.config.searchText && this.config.searchText.length > 1) {\n      var lsearchText = this.config.searchText.toLowerCase();\n      return this.albumList.filter((a) =>\n        a.Title.toLowerCase().includes(lsearchText) ||\n        a.Artist.ArtistName.toLowerCase().includes(lsearchText)\n      );\n    }\n    return this.albumList;\n  }\n\n  getAlbums() {\n    this.busy = true;\n    this.albumList = [];\n    this.albumService.getAlbums()\n      .subscribe(albums => {\n        this.albumList = albums;\n        this.busy = false;\n\n        // reset scroll position of the list\n        setTimeout(()=> $(\"#MainView\").scrollTop(this.albumService.listScrollPos), 100);\n      }, err => {\n        if (!err.message)\n          this.error.error(\"Unable to load albums right now. Most likely the server is not responding.\");\n        else\n          this.error.error(err);\n        this.busy = false;\n      });\n  }\n\n  albumClick(album: Album) {\n    this.albumService.listScrollPos = $(\"#MainView\").scrollTop();\n    this.router.navigate(['/album', album.Id]);\n  }\n\n\n  addAlbum() {\n\n  }\n\n  deleteAlbum(album: Album) {\n\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {Album, Artist, Track} from '../business/entities';\nimport {AppConfiguration} from \"../business/appConfiguration\";\nimport {ErrorInfo} from \"../common/errorDisplay\";\nimport {Observable} from \"rxjs\";\nimport {map, catchError} from \"rxjs/operators\";\n\nimport {HttpClient} from \"@angular/common/http\";\n\n\n// import 'rxjs/Operator/map';\n// import 'rxjs/add/operator/catch';\n// import 'rxjs/add/observable/throw';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class AlbumService {\n    constructor( private httpClient: HttpClient,\n                 private config: AppConfiguration) {\n    }\n\n    albumList: Album[] = [];\n    album: Album = new Album();\n\n    //artistList: Artist[] = [];\n    listScrollPos = 0;\n\ngetAlbums(): Observable<any> {\n    return this.httpClient.get<Album[]>(this.config.urls.url(\"albums\"))\n                .pipe(\n                    map(albumList => this.albumList = albumList),\n                    catchError( new ErrorInfo().parseObservableResponseError)\n                );\n        \n        // .map(albumList => this.albumList = albumList),\n        // .catch(new ErrorInfo().parseObservableResponseError)            \n}\n\n    getAlbum(id): Observable<Album> {\n        return this.httpClient.get<Album>(this.config.urls.url(\"album\", id))\n            .pipe(\n                map(album => {\n                    this.album = album;\n\n                    if (!this.albumList || this.albumList.length < 1)\n                        this.getAlbums(); // load up albums in background\n\n                    return this.album;\n                }),\n                catchError(new ErrorInfo().parseObservableResponseError)\n            );\n    }\n\n    newAlbum(): Album {\n        this.album = new Album();\n        return this.album;\n    }\n\n    saveAlbum(album): Observable<any> {\n        return this.httpClient.post<Album>(this.config.urls.url(\"album\"),\n            album,{withCredentials: true})\n            .pipe(map(album => {\n                this.album = album;\n\n                // explicitly update the list with the updated data\n                this.updateAlbum(this.album);\n                return this.album;\n            }),\n            catchError(new ErrorInfo().parseObservableResponseError)\n        );\n    }\n\n    deleteAlbum(album: Album): Observable<any> {\n        return this.httpClient.delete<boolean>(this.config.urls.url(\"album\", album.Id),\n            this.config.requestHeaders)\n            .pipe(\n                map(result => {\n                    if (result)\n                        this.removeAlbum(album); // client side remove\n                }),\n                catchError(new ErrorInfo().parsePromiseResponseError)\n            );\n    }\n\n\n    /**\n     * Updates the .albumList property by updating the actual\n     * index entry in the existing list, adding new entries and\n     * removing 0 entries.\n     * @param album  - the album to update\n     */\n    updateAlbum(album) {\n        var i = this.albumList.findIndex((a) => (a.Id == album.Id));\n        if (i > -1)\n            this.albumList[i] = album;\n        else {\n            this.albumList.push(album);\n            this.albumList.sort((a: Album, b: Album) => {\n                var aTitle = a.Title.toLocaleLowerCase();\n                var bTitle = b.Title.toLocaleLowerCase();\n                if (aTitle > bTitle)\n                    return 1;\n                if (aTitle < bTitle)\n                    return -1;\n                return 0;\n            })\n        }\n\n        this.albumList = this.albumList.filter((a) => a.Id != 0);\n    }\n\n    removeAlbum(album) {\n        this.albumList = this.albumList.filter((a) => a.Id != album.Id);\n    }\n\n    addSong(track: Track) {\n        this.album.Tracks.push(track);\n    }\n\n    removeSong(track: Track) {\n        var idx = this.album.Tracks.findIndex((t) => track.Id == t.Id);\n        if (idx > -1)\n            this.album.Tracks.splice(idx, 1);\n    }\n\n\n}\n","module.exports = \"<div *ngIf=\\\"allowEditing\\\">\\n  <button (click)=\\\"addTrack(track)\\\" accesskey=\\\"a\\\"\\n          *ngIf=\\\"!isSongVisible\\\" title=\\\"Add Song (alt-a)\\\"\\n          class=\\\"btn btn-info btn-xs\\\" style=\\\"margin-bottom: 10px;\\\">\\n    <i class=\\\"fa fa-plus-circle\\\"></i> Add Song\\n  </button>\\n\\n  <div *ngIf=\\\"isSongVisible\\\" class=\\\"well well-sm\\\">\\n\\n    <div class=\\\"row\\\">\\n      <div class=\\\" col-sm-9\\\">\\n        <input class=\\\"form-control input-sm\\\" id=\\\"songSongName\\\"\\n               placeholder=\\\"Name of the song\\\"\\n               name=\\\"songSongName\\\"\\n               [(ngModel)]=\\\"track.SongName\\\"/>\\n\\n      </div>\\n      <div class=\\\"col-sm-3\\\">\\n        <input class=\\\"form-control input-sm\\\" id=\\\"Length\\\"\\n               name=\\\"Length\\\"\\n               [(ngModel)]=\\\"track.Length\\\"\\n               placeholder=\\\"0:00\\\"/>\\n      </div>\\n    </div>\\n\\n    <button class=\\\"btn btn-success btn-xs\\\"\\n            (click)=\\\"saveTrack(track)\\\"\\n            [disabled]=\\\"!track.SongName\\\"\\n            style=\\\"margin-top: 8px;\\\" accesskey=\\\"\\\">\\n      <i class=\\\"fa fa-plus-circle\\\"></i> Save Track\\n    </button>\\n    <button class=\\\"btn btn-default btn-xs\\\"\\n            (click)=\\\"cancelTrack()\\\"\\n            style=\\\"margin-top: 8px;\\\">\\n      <i class=\\\"fa fa-times\\\"></i> Cancel\\n    </button>\\n  </div>\\n</div>\\n\\n<table class=\\\" table table-striped small\\\">\\n  <tr *ngFor=\\\"let track of tracks\\\">\\n    <td>{{track.SongName}}</td>\\n    <td>{{track.Length}}</td>\\n    <td>\\n      <button *ngIf=\\\"allowEditing\\\" (click)=\\\"removeTrack(track)\\\"\\n              class=\\\"btn btn-xs btn-danger\\\">\\n        <i class=\\\"fa fa-remove\\\"></i> Remove\\n      </button>\\n    </td>\\n  </tr>\\n</table>\\n\"","import {Component, OnInit, Input} from '@angular/core';\nimport {Track} from \"../business/entities\";\nimport {AlbumService} from \"./albumService\";\n\n@Component({\n    //moduleId: module.id,\n    selector: 'album-songlist',\n    templateUrl: 'albumSongList.html'\n})\nexport class AlbumSongList implements OnInit {\n  constructor(private albumService:AlbumService) {\n  }\n\n  ngOnInit() {\n  }\n\n  @Input() tracks: Track[] = [];\n  @Input() allowEditing: boolean = false;\n  isSongVisible = false;\n  track:Track = new Track();\n\n  addTrack(track){\n      this.track = new Track();\n      this.isSongVisible = true;\n  }\n  cancelTrack() {\n      this.track = new Track();\n      this.isSongVisible = false;\n  }\n\n  saveTrack(track){\n      this.albumService.addSong(track);\n      this.isSongVisible = false;\n  }\n\n  removeTrack(track: Track) {\n      this.albumService.removeSong(track);\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { AlbumList } from './albums/albumList';\nimport { AlbumDisplay} from './albums/albumDisplay';\nimport {AlbumEditor } from './albums/albumEditor';\nimport { ArtistList } from './artists/artistList';\nimport { ArtistDisplay} from \"./artists/artistDisplay\";\nimport {OptionsComponent} from \"./options/options\";\nimport {LoginComponent} from \"./common/login\";\nimport {AboutComponent} from \"./options/about\";\n\nconst routes: Routes = [\n\t{path: '', redirectTo: 'albums', pathMatch: 'full'},\n\t{path: 'albums', component: AlbumList },\n\t{path: 'album/:id', component: AlbumDisplay },\n\t{path: 'album/edit/:id', component: AlbumEditor },\n\t{path: 'artists', component: ArtistList },\n\t{path: 'artist/:id', component: ArtistDisplay },\n\t{path: 'options', component: OptionsComponent },\n\t{ path: 'login', component: LoginComponent },\n\t{ path: 'logout', component: LoginComponent },\n\t{ path: 'about', component: AboutComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n  providers: []\n})\nexport class AppRoutingModule { }\n","module.exports = \"\"","module.exports = \"<app-header></app-header>\\n\\n<div style=\\\"margin-top: 72px; padding: 1px;\\\">\\n\\n        <div id=\\\"MainView\\\" >\\n            <router-outlet autoscroll=\\\"true\\\"></router-outlet>\\n        </div>\\n        <app-footer></app-footer>\\n\\n</div>\\n\\n<body>\\n</body>\\n\\n<footer>\\n  <hr/>\\n  &copy Chennai Foundation\\n</footer>\\n\"","import {Component} from '@angular/core';\nimport {UserInfo} from \"./business/userInfo\";\n\ndeclare var toastr:any;\n\n@Component({\n    selector: 'app-root',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n    title = 'Students Information Application';\n\n    constructor(private user: UserInfo) {\n        // check authentication when the page is loaded\n        // fire and forget - service updates the auth\n        // status model\n        this.user.checkAuthentication()\n            .subscribe();\n\n        // re-check infrequently - once every 2 minutes\n        setInterval( ()=> {\n            var previousStatus = user.isAuthenticated;\n            this.user.checkAuthentication()\n                .subscribe((isAuthenticated)=> {\n                    if (!isAuthenticated && previousStatus)\n                        toastr.warning(\"Your session has expired. Please log in again.\");\n                });\n        },120000)\n    }\n}\n","import {NgModule, Injectable} from '@angular/core'\nimport {AppRoutingModule} from \"./app-routing.module\";\nimport {AppComponent} from \"./app.component\";\n\nimport {FormsModule} from \"@angular/forms\";\nimport {BrowserModule} from \"@angular/platform-browser\";\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {HttpModule} from \"@angular/http\";  // legacy\nimport {HttpClientModule} from \"@angular/common/http\";   // use this\n\n\n// components\nimport {AppHeader} from './common/appHeader';\nimport {AppFooter} from \"./common/appFooter\";\n\nimport {AlbumList} from './albums/albumList';\nimport {AlbumDisplay} from './albums/albumDisplay';\nimport {AlbumEditor} from './albums/albumEditor';\nimport {ArtistList} from './artists/artistList';\nimport {ArtistDisplay} from './artists/artistDisplay';\n\n// services\nimport {Album, Artist, Track} from './business/entities';\nimport {AlbumService} from './albums/albumService';\nimport {ArtistService} from './artists/artistService';\nimport {AppConfiguration} from './business/appConfiguration';\nimport {UserInfo} from \"./business/userInfo\";\n\nimport {LocationStrategy, HashLocationStrategy} from '@angular/common';\nimport {AlbumSongList} from \"./albums/albumSongList\";\n\n// directives and shared components\nimport {ErrorDisplay, ErrorInfo} from './common/errorDisplay';\nimport {ArtistEditor} from \"./artists/artistEditor\";\n\nimport {LoginComponent} from \"./common/login\";\n\n//import {HttpClient} from \"./business/HttpClient\";\nimport {AboutComponent} from \"./options/about\";\nimport { OptionsComponent } from './options/options';\n\n\n//declare var $:any;\n//declare var toastr:any;\n\n// Enable production mode\n// import { enableProdMode } from '@angular/core';\n// enableProdMode();\n\n@NgModule({\n    imports: [\n        BrowserModule,\n        BrowserAnimationsModule,\n        FormsModule,\n        HttpModule,\n        HttpClientModule,\n        AppRoutingModule\n    ],\n\n    // components\n    declarations: [\n        AppComponent,\n        AppHeader,\n        AppFooter,\n\n        OptionsComponent,\n        AboutComponent,\n        AlbumList,\n        AlbumDisplay,\n        AlbumEditor,\n        AlbumSongList,\n        ArtistList,\n        ArtistDisplay,\n        ArtistEditor,\n        ErrorDisplay,        \n        LoginComponent\n    ],\n    // services, pipes and providers\n    providers: [            \n        //Album, Artist, Track\n\n        // make sure you use this for Hash Urls rather than HTML 5 routing\n        //{ provide: LocationStrategy, useClass: HashLocationStrategy },\n\n        // {\n        //   provide: XHRBackend,\n        //   useFactory: (xhr, opts, strategy, user) => {\n        //     return new CoreXHRBackend(xhr, opts, strategy, user);\n        //   },\n        //   deps: [BrowserXhr, ResponseOptions, XSRFStrategy, UserInfo],\n        // }\n    ],\n\n    bootstrap: [AppComponent]\n})\nexport class AppModule {\n\n}\n","module.exports = \"<div  class=\\\"container\\\" [@slideIn]=\\\"'in'\\\">\\n\\n  <div class=\\\"btn-group\\\" style=\\\"margin-bottom: 10px;\\\">\\n    <a routerLink=\\\"/artists\\\" class=\\\"btn btn-sm btn-default\\\">\\n      <i class=\\\"fa fa-list\\\"></i>\\n      Artists</a>\\n    <a (click)=\\\"editArtist()\\\"\\n       class=\\\"btn btn-sm btn-default\\\">\\n      <i class=\\\"fa fa-edit\\\"></i>\\n      Edit\\n    </a>\\n\\n    <button (click)=\\\"deleteArtist(artist)\\\"\\n            class=\\\"btn btn-sm btn-default\\\">\\n      <i class=\\\"fa fa-remove\\\"></i>\\n      Delete\\n    </button>\\n  </div>\\n\\n  <error-display [error]=\\\"error\\\"></error-display>\\n\\n\\n  <h2>{{artist.ArtistName}}</h2>\\n\\n  <div class=\\\"separator\\\"></div>\\n\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-sm-3\\\">\\n      <img [src]=\\\"artist.ImageUrl\\\"\\n           style=\\\"width: 97%; margin-bottom: 8px; border-radius: 4px; box-shadow: 2px 2px 4px #535353\\\" />\\n    </div>\\n    <div class=\\\"col-sm-8\\\">\\n      <div class=\\\"line-breaks\\\">{{artist.Description }}</div>\\n\\n      <a class=\\\"small\\\" *ngIf=\\\"artist.AmazonUrl\\\" href=\\\"{{artist.AmazonUrl}}\\\">{{artist.ArtistName}} on Amazon</a>\\n    </div>\\n  </div>\\n\\n\\n  <h3>Albums</h3>\\n  <div class=\\\"separator\\\"></div>\\n\\n  <div class=\\\"album\\\" *ngFor=\\\"let album of artist.Albums\\\" style=\\\"text-decorataion: none;\\\"\\n       (click)=\\\"albumClick(album)\\\">\\n    <div class=\\\"album-overlay\\\">\\n      <a [routerLink]=\\\"['/album/edit',album.Id]\\\">\\n        <i class=\\\"fa fa-edit\\\" title=\\\"Edit\\\"></i></a> &nbsp;\\n      <a (click)=\\\"deleteAlbum(album)\\\">\\n        <i class=\\\"fa fa-remove\\\" title=\\\"Delete\\\"></i></a>\\n    </div>\\n\\n    <div>\\n      <img [src]=\\\"album.ImageUrl\\\"  class=\\\"album-image\\\" *ngIf=\\\"album.ImageUrl\\\"  />\\n      <div style=\\\"padding-left: 80px;\\\">\\n        <div class=\\\"album-title\\\">{{album.Title}}</div>\\n        <div class=\\\"album-artist\\\">\\n          {{(album.Year ? 'in ' + album.Year : '')}}\\n        </div>\\n        <div class=\\\"album-descript\\\">{{album.Description}}</div>\\n      </div>\\n    </div>\\n  </div>\\n\\n  <a class=\\\"btn btn-sm btn-success\\\" routerLink=\\\"/album/edit/0\\\">\\n    <i class=\\\"fa fa-plus\\\"></i>\\n    Add Album\\n  </a>\\n\\n\\n\\n</div>\\n\\n<!-- modal edit dialog -->\\n<artist-editor [artist]=\\\"artist\\\"></artist-editor>\\n\"","import { Component, OnInit, ViewChild} from '@angular/core';\nimport { ArtistService} from \"./artistService\";\nimport { Artist, Album} from \"../business/entities\";\nimport { AppConfiguration} from \"../business/appConfiguration\";\nimport { ActivatedRoute, Router} from \"@angular/router\";\n\nimport {UserInfo} from \"../business/userInfo\";\nimport {ErrorInfo} from \"../common/errorDisplay\";\nimport { ArtistEditor } from \"./artistEditor\";\nimport {slideIn} from \"../common/animations\";\n\n\n\n@Component({\n    //moduleId: module.id,\n    selector: 'artist-display',\n    templateUrl: './artistDisplay.html',\n  animations: [ slideIn ]\n})\nexport class ArtistDisplay implements OnInit {\n  // reference a child editor component\n  @ViewChild(ArtistEditor) editor:ArtistEditor;\n\n  artist: Artist = new Artist();\n  albums: Album[] = [];\n  artistId = null;\n  formActive = true;\n\n  error:ErrorInfo = new ErrorInfo();\n\n  constructor(private route: ActivatedRoute,\n              private artistService: ArtistService,\n              private config: AppConfiguration,\n              private router: Router,\n              private user: UserInfo) {\n  }\n\n\n  ngOnInit() {\n    this.config.isSearchAllowed = false;\n\n    var id = this.route.snapshot.params[\"id\"];\n    if (id < 1)\n      return;\n\n    this.artistService.getArtist(id)\n      .subscribe(\n          (result: any) => {\n          this.artist = result.Artist;\n          this.albums = result.Albums;\n        },\n        (err) => {\n          this.error.error(err);\n        });\n  }\n\n  editArtist() {\n    if (!this.user.isAuthenticated) {\n      this.router.navigate([\"login\"]);\n      return;\n    }\n\n    this.editor.showEditor();\n  };\n\n  albumClick(album) {\n    //window.location.hash = \"album/\" + album.Id;\n    this.router.navigate(['/album', album.Id]);\n  }\n\n\n\n  addAlbum() {\n\n  }\n\n  deleteArtist(artist:Artist) {\n    this.artistService.deleteArtist(artist)\n      .subscribe((result) => {\n        this.error.info(\"Album deleted.\");\n        setTimeout(()=> {\n          this.router.navigate([\"/artists\"]);\n          this.artistService.artistList =\n              this.artistService.artistList.filter( art=> art.Id != artist.Id );\n        }, 1200);\n      }, (err)=> { console.log(err); this.error.error(err) });\n  }\n}\n","module.exports = \"<div class=\\\"modal fade\\\" id=\\\"EditModal\\\"\\n     tabindex=\\\"-1\\\" role=\\\"dialog\\\">\\n\\n  <div class=\\\"modal-dialog\\\" role=\\\"document\\\" >\\n    <div class=\\\"modal-content\\\" >\\n      <div class=\\\"modal-header\\\">\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\"><span aria-hidden=\\\"true\\\">&times;</span><span class=\\\"sr-only\\\">Close</span></button>\\n        <h3 class=\\\"modal-title\\\" id=\\\"myModalLabel\\\">Artist Info</h3>\\n      </div>\\n\\n      <form name=\\\"form1\\\"\\n            action=\\\"javascript:{}\\\" novalidate\\n            #form1=\\\"ngForm\\\"  >\\n\\n      <div class=\\\"modal-body\\\">\\n         <div class=\\\"form-group\\\">\\n            <label for=\\\"ArtistName\\\">Artist Name:</label>\\n            <input name=\\\"ArtistName\\\" id=\\\"ArtistName\\\" type=\\\"text\\\"\\n                   class=\\\"form-control input-sm\\\"\\n                   placeholder=\\\"Artist Name\\\" required\\n                   [(ngModel)]=\\\"artist.ArtistName\\\" />\\n          </div>\\n\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"Description\\\">Bio:</label>\\n            <textarea type=\\\"text\\\" class=\\\"form-control input-sm\\\"\\n                      name=\\\"Description\\\" id=\\\"Description\\\"\\n                      required\\n                      style=\\\"height: 80px;\\\"\\n                      minlength=\\\"20\\\"\\n                      placeholder=\\\"Band Bio\\\" [(ngModel)]=\\\"artist.Description\\\"></textarea>\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"ImageUrl\\\">Image Url:</label>\\n            <input type=\\\"text\\\" class=\\\"form-control input-sm\\\"\\n                   id=\\\"ImageUrl\\\" name=\\\"ImageUrl\\\"\\n                   placeholder=\\\"Image Url\\\" [(ngModel)]=\\\"artist.ImageUrl\\\" />\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"AmazonUrl\\\">Amazon Url:</label>\\n            <input type=\\\"text\\\" class=\\\"form-control input-sm\\\"\\n                   name=\\\"AmazonUrl\\\" id=\\\"AmazonUrl\\\"\\n                   placeholder=\\\"Link to Artist Amazon Page\\\" [(ngModel)]=\\\"artist.AmazonUrl\\\" />\\n          </div>\\n\\n      </div>\\n      <div class=\\\"modal-footer\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-default\\\" data-dismiss=\\\"modal\\\">\\n          <i class=\\\"fa fa-remove\\\"></i> Cancel</button>\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\"\\n                [disabled]=\\\"form1.pristine || form1.invalid\\\" accesskey=\\\"S\\\"\\n                (click)=\\\"saveArtist(artist)\\\">\\n          <i class=\\\"fa fa-check\\\"></i>\\n          Save changes\\n        </button>\\n      </div>\\n\\n      </form>\\n    </div>\\n  </div>\\n</div>\\n\"","import {Component, OnInit, Input } from '@angular/core';\nimport {ArtistService} from \"./artistService\";\nimport {Artist, Album} from \"../business/entities\";\n\nimport {ErrorInfo} from \"../common/errorDisplay\";\nimport {AppConfiguration} from \"../business/appConfiguration\";\nimport {UserInfo} from \"../business/userInfo\";\n\ndeclare var $: any;\n\n@Component({\n    //moduleId: module.id,\n    selector: 'artist-editor',\n    templateUrl: 'artistEditor.html'\n})\nexport class ArtistEditor implements OnInit {\n  @Input() artist: Artist = new Artist();\n  albums: Album[] = [];\n  formActive = false;\n  error: ErrorInfo = new ErrorInfo();\n\n  constructor(private artistService: ArtistService,\n              private config: AppConfiguration,\n              private user:UserInfo) {\n    console.log(\"ArtistEditor ctor\");\n  }\n\n  ngOnInit() {\n    this.config.isSearchAllowed = false;\n  }\n\n\n  showEditor() {\n    (<any> $(\"#EditModal\")).modal(\"show\");\n  }\n\n\n\n  saveArtist(artist) {\n    this.artistService.saveArtist(artist)\n      .subscribe( result => {\n        this.artist = result.Artist;\n        this.albums = result.Albums;\n\n          (<any> $(\"#EditModal\")).modal(\"hide\");\n\n        this.formActive = false;\n        setTimeout(()=> {\n          this.formActive = true;\n        }, 0);\n\n        this.error.info(\"Artist has been saved\");\n      },\n      err => {\n        this.error.error(err);\n\n        if (err.response && err.response.status == 401) {\n           window.location.hash=\"login\";\n        }\n      });\n  }\n\n}\n","module.exports = \"<div class=\\\"container container-fluid\\\" [@slideInLeft]=\\\"'in'\\\" >\\n\\n  <error-display [error]=\\\"error\\\"></error-display>\\n\\n  <div class=\\\"list-group\\\">\\n    <a routerLink=\\\"/artists\\\" class=\\\"list-group-item active\\\">\\n      <i class=\\\"fa fa-list\\\"></i> Artists\\n      <span class=\\\"badge\\\">{{artistList.length}}</span>\\n    </a>\\n\\n    <a class=\\\"list-group-item\\\"\\n       *ngFor=\\\"let artist of filteredArtistList\\\"\\n       (click)=\\\"artistClick(artist)\\\" role=\\\"button\\\">\\n      <i class=\\\"fa fa-users\\\" style=\\\"color: steelblue;\\\"></i> &nbsp;\\n      <span class=\\\"badge\\\">{{artist.AlbumCount}}</span>\\n      {{artist.ArtistName}}\\n    </a>\\n  </div>\\n\\n</div>\\n\"","﻿import {Component, OnInit} from '@angular/core';\nimport { Artist } from '../business/entities';\nimport {AppConfiguration} from \"../business/appConfiguration\";\nimport { ArtistService } from './artistService';\nimport {Router} from \"@angular/router\";\nimport {ErrorInfo} from \"../common/errorDisplay\";\n\nimport {slideIn, slideInLeft} from \"../common/animations\";\n\ndeclare var $:any;\n\n@Component({\n    selector: 'artist-list',\n    templateUrl: 'artistList.html',\n    animations: [ slideInLeft ]\n})\nexport class ArtistList implements OnInit {\n  constructor(private router:Router,\n              private artistService: ArtistService,\n              private config: AppConfiguration) {\n\n  }\n\n  artistList: Artist[] = [];\n  error:ErrorInfo = new ErrorInfo();\n\n  ngOnInit() {\n    this.getArtists();\n\n    this.config.searchText = \"\";\n    this.config.isSearchAllowed = true;\n    this.config.activeTab = \"artists\";\n\n    setTimeout(() => {\n      $(\"#SearchBox\").focus();\n    },200);\n  }\n\n  get filteredArtistList() {\n    if(this.config.searchText && this.config.searchText.length > 1) {\n      var lsearchText = this.config.searchText.toLowerCase();\n      return this.artistList.filter((a) =>\n        a.ArtistName.toLowerCase().includes(lsearchText)\n      );\n    }\n    return this.artistList;\n  }\n\n\n\n\n  getArtists() {\n    this.artistService.getArtists()\n      .subscribe( artists => {\n          this.artistList = artists;\n        \n          setTimeout(() => {\n            $(\"#MainView\").scrollTop(this.artistService.listScrollPos);\n            this.artistService.listScrollPos = 0;\n          }, 20);\n          return this.artistList;\n        },\n        err => {\n          if (!err.message)\n            this.error.error(\"Unable to load artists right now. Most likely the server is not responding.\");\n          else\n            this.error.error(err) \n          }\n      );\n  }\n\n  artistClick(artist:Artist) {\n    // Manual Navigation\n    this.router.navigate(['/artist', artist.Id]);\n    this.artistService.listScrollPos = $(\"#MainView\").scrollTop();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {Artist, Album, ArtistResult} from '../business/entities';\n\nimport {AppConfiguration} from \"../business/appConfiguration\";\nimport {HttpClient} from \"@angular/common/http\";\nimport {ErrorInfo} from \"../common/errorDisplay\";\nimport {Observable, of} from 'rxjs';\nimport { map, catchError } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ArtistService {\n  constructor(private httpClient: HttpClient,\n              private config: AppConfiguration) {\n    console.log(\"ArtistService ctor\");\n  }\n\n  artistList: Artist[] = [];\n  artist: Artist = null;\n  albums: Album[] = [];\n  error:string  = \"\";\n\n  listScrollPos = 0;\n\n\n  getArtists(force: boolean = false): Observable<Artist[]> {\n\n    // use locally cached version\n    if (force !== true && (this.artistList && this.artistList.length > 0))\n      return of(this.artistList) as Observable<Artist[]>;\n\n    return this.httpClient.get<Artist[]>(this.config.urls.url(\"artists\"))\n      .pipe(map(artistList => {\n        this.artistList = artistList;\n        return this.artistList;\n      }),\n        catchError(new ErrorInfo().parseObservableResponseError)\n      );\n  }\n\n\n  getArtist(id): Observable<ArtistResult> {\n    return this.httpClient.get<any>(this.config.urls.url(\"artist\", id),\n      this.config.requestHeaders)\n      .pipe(map(artistResult => {\n        this.artist = artistResult.Artist;\n        this.artist.Albums = artistResult.Albums;\n\n        if (!this.artistList || this.artistList.length < 1)\n          this.getArtists();\n\n        return artistResult;\n      }),\n        catchError(new ErrorInfo().parseObservableResponseError)\n      );\n  }\n\n  saveArtist(artist): Observable<ArtistResult> {\n    return this.httpClient.post<ArtistResult>(this.config.urls.url(\"saveArtist\"), artist,\n      this.config.requestHeaders)\n      .pipe(map(artistResult => {\n\n        this.artist = artistResult.Artist;\n        this.artist.Albums = artistResult.Albums;\n\n        this.updateArtist(artistResult.Artist);\n\n        return artistResult;\n      }),\n        catchError(new ErrorInfo().parseObservableResponseError)\n      );\n  }\n\n  // Update the artistList with an artist\n  updateArtist(artist) {\n\n    var idx = this.artistList.findIndex( (art:Artist) => art.Id == artist.Id );\n\n    if (idx < 0)\n      this.artistList.push(artist);\n    else {\n      this.artistList[idx] = artist;\n    }\n  }\n\n  deleteArtist(artist:Artist):Observable<boolean> {\n    return this.httpClient.delete<boolean>(this.config.urls.url(\"artist\",artist.Id),\n                            this.config.requestHeaders)\n                            .pipe(catchError( new ErrorInfo().parseObservableResponseError) );\n  }\n}\n\n","﻿import { Injectable } from '@angular/core';\nimport {ApplicationStats} from \"./entities\";\n\ndeclare var $:any;\ndeclare var toastr: any;\ndeclare var location: any;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AppConfiguration {\n      constructor(){        \n          console.log(\"AppConfiguration ctor\");\n          this.setToastrOptions();\n          \n          if(location.port && (location.port == \"3000\") || (location.port== \"4200\") )\n            this.urls.baseUrl = \"http://localhost:5000/\"; // kestrel\n\n          //this.urls.baseUrl = \"http://localhost:5001/\"; // kestrel\n          //this.urls.baseUrl = \"http://localhost:26448/\"; // iis Express\n          //this.urls.baseUrl = \"http://localhost/albumviewer/\"; // iis          \n          //this.urls.baseUrl = \"https://albumviewer.west-wind.com/\";  // online          \n      }\n\n      // top level search text\n      searchText = \"\";\n      activeTab = \"albums\";\n      isSearchAllowed = true;\n      applicationStats:ApplicationStats = new ApplicationStats();\n\n      urls = {\n        baseUrl: \"./\",\n        //baseUrl: \"http://localhost/albumviewer/\",\n        //baseUrl: \"http://localhost:5000/\",\n        //baseUrl: \"https://albumviewer2swf.west-wind.com/\",\n        albums: \"api/albums\",\n        album: \"api/album\",\n        artists: \"api/artists\",\n        artist: \"api/artist\",\n        artistLookup: \"api/artistlookup?search=\",\n        saveArtist: \"api/artist\",\n        login: \"api/login\", //\"api/login\",\n        logout: \"api/logout\",\n        isAuthenticated: \"api/isAuthenticated\",\n        reloadData: \"api/reloadData\",\n        applicationStats: \"api/applicationstats\",\n        url: (name,parm1?,parm2?,parm3?) => {\n          var url = this.urls.baseUrl + this.urls[name];\n          if (parm1)\n            url += \"/\" + parm1;\n          if (parm2)\n            url += \"/\" + parm2;\n          if (parm3)\n            url += \"/\" + parm3;\n\n          return url;\n        }\n      };\n\n\n      setToastrOptions() {\n        toastr.options.closeButton = true;\n        toastr.options.positionClass = \"toast-bottom-right\";\n      }\n\n  /**\n   * Http Request options to for requests\n   * @type {RequestOptions}\n   */  \n  requestHeaders = { withCredentials: true};\n}\n\n","import {Injectable, OnInit} from '@angular/core';\ndeclare var $:any;\n\n@Injectable()\nexport class Album {\n    Id:number = 0;\n    ArtistId:number = 0;\n    Title:string = null;\n    Description:string = null;\n    Year:number = 0;\n    ImageUrl:string = null;\n    AmazonUrl:string = null;\n    SpotifyUrl:string = null;\n\n    Artist:Artist = new Artist();\n    Tracks:Track[] = [];\n}\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class Artist {\n    Id:number = 0;\n    ArtistName:string = null;\n    Description:string = null;\n    ImageUrl:string = null;\n    AmazonUrl:string = null;\n    AlbumCount:number = 0;\n    Albums:Album[] = [];\n}\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class ArtistResult {\n    Artist: Artist = null;\n    Albums: Album[] = [];\n}\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class Track {\n    Id:number = 0;\n    AlbumId:number = 0;\n    SongName:string = null;\n    Length:string = null;\n    Bytes:number = 0;\n    UnitPrice:number = 0;\n}\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class ApplicationStats {\n    OsPlatform:string = null;\n    AngularVersion = \"Unknown\"; \n    AspDotnetVersion = \"Unknown\";\n    DataMode = \"Unknown\";\n}\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\nimport {AppConfiguration} from \"./appConfiguration\";\n\nimport { Observable, throwError } from 'rxjs';\nimport {map,catchError} from 'rxjs/operators';\n\n\nimport {ErrorInfo, ErrorDisplay} from \"../common/errorDisplay\";\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class UserInfo {\n\n    isAdmin = false;\n    userName: string = null;\n    sessionStarted = new Date();\n\n    private _isAuthenticated = false;\n    set isAuthenticated(val) {\n        this._isAuthenticated = val || false;\n        // cache authentication\n        localStorage.setItem('av_isAuthenticated', this._isAuthenticated.toString());\n    }\n\n    get isAuthenticated() {\n        return this._isAuthenticated;\n    };\n\n    constructor(private http: HttpClient,\n                private config: AppConfiguration) {\n        // initialize isAuthenticate from localstorage\n        let isAuthenticated = localStorage.getItem(\"av_isAuthenticated\");\n        this._isAuthenticated = !(!isAuthenticated || isAuthenticated === 'false');\n    }\n\n\n    login(username, password) {\n        return this.http.post(this.config.urls.url(\"login\"), {\n            username: username,\n            password: password\n        })\n        .pipe(catchError((response) => {\n                if (response.status === 401)\n                    this.isAuthenticated = false;\n\n                return new ErrorInfo().parseObservableResponseError(response);\n            }));\n    }\n\n    logout() {\n        return this.http.get<boolean>(this.config.urls.url(\"logout\"))\n            .pipe(\n                map(\n                    (success) => {\n                        this.isAuthenticated = false;\n                        return true;\n                    }\n                ));\n    }\n\n    /**\n     * Calls to the server to check authentication and then\n     * updates the local isAuthenticated flag\n     * @returns {Observable<t>}\n     */\n    checkAuthentication() {\n        const url = this.config.urls.url(\"isAuthenticated\");\n        console.log(url);\n        return this.http.get<boolean>(url)\n            .pipe(\n                map((result) => {\n                    this.isAuthenticated = result;\n                    return result;\n                }),\n                catchError((response) => {\n                    this.isAuthenticated = false;                    \n                    var err = new ErrorInfo().parseObservableResponseError(response)\n                    return throwError(err);\n                })\n            );\n    }\n}\n","import { trigger, state, style, transition, animate } from '@angular/animations';\n\nexport const slideIn = trigger('slideIn', [\n  state('*', style({\n    transform: 'translateX(100%)',\n  })),\n  state('in', style({\n    transform: 'translateX(0)',\n  })),\n  state('out',   style({\n    transform: 'translateX(-100%)',\n  })),\n  transition('* => in', animate('400ms ease-in')),\n  transition('in => out', animate('400ms ease-out'))\n]);\n\nexport const slideInLeft = trigger('slideInLeft', [\n  state('*', style({\n    transform: 'translateX(-100%)',\n  })),\n  state('in', style({\n    transform: 'translateX(0)',\n  })),\n  state('out',   style({\n    transform: 'translateX(100%)',\n  })),\n  transition('* => in', animate('300ms ease-in')),\n  transition('in => out', animate('300ms ease-out'))\n]);\n","module.exports = \"<div class=\\\"banner banner-bottom\\\">\\n  <nav id=\\\"Toolbar\\\">\\n    <a routerLink=\\\"/albums\\\" [ngClass]=\\\"{ selected: config.activeTab == 'albums'}\\\" >\\n      <img src=\\\"images/record.png\\\" title=\\\"Albums\\\" /> <span>Albums</span>\\n    </a>\\n    <a routerLink=\\\"/artists\\\" [ngClass]=\\\"{ selected: config.activeTab == 'artists'}\\\">\\n      <img src=\\\"images/artists32.png\\\" title=\\\"Artists\\\" /> <span>Artists</span>\\n    </a>\\n    <a routerLink=\\\"/options\\\" [ngClass]=\\\"{ selected: config.activeTab == 'options'}\\\">\\n      <img src=\\\"images/gear.png\\\" title=\\\"Options\\\" /> <span>Options</span>\\n    </a>\\n  </nav>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {AppConfiguration} from \"../business/appConfiguration\";\n\n@Component({\n    //moduleId: module.id,\n    selector: 'app-footer',\n    templateUrl: 'appFooter.html'\n})\nexport class AppFooter implements OnInit {\n    constructor(public config:AppConfiguration) {\n\n    }\n\n    ngOnInit() {\n\n    }\n\n}\n","module.exports = \"<div id=\\\"TitleBar\\\" class=\\\"statusbar-push\\\">\\n        <a routerLink=\\\"/albums\\\">\\n            <img src=\\\"images/headphone-head.png\\\"\\n                 style=\\\"height: 35px; float: left\\\" />\\n            <div style=\\\"float: left; margin-left: 5px; line-height: 1.2\\\">\\n                <i style=\\\"color: steelblue; font-size: 0.8em; font-weight: bold;\\\">West Wind</i><br />\\n                <i style=\\\"color: whitesmoke; font-size: 1.25em; font-weight: bold;\\\">AlbumViewer</i>\\n            </div>\\n        </a>\\n    </div>\\n\\n    \\n    <div style=\\\"margin: 0; padding: 0; border: none;\\\">\\n        <div class=\\\"banner statusbar-push\\\">\\n            <nav id=\\\"Toolbar-Top\\\" class=\\\"pull-right\\\">\\n\\n                <a  routerLink=\\\"/albums\\\" [ngClass]=\\\"{ selected: config.activeTab == 'albums'}\\\">\\n                    <img src=\\\"images/record.png\\\" title=\\\"Albums\\\" /> <span>Albums</span>\\n                </a>\\n                <a routerLink=\\\"/artists\\\" [ngClass]=\\\"{ selected: config.activeTab == 'artists'}\\\">\\n                    <img src=\\\"images/artists32.png\\\" title=\\\"Artists\\\" /> <span>Artists</span>\\n                </a>\\n                <a routerLink=\\\"/options\\\" [ngClass]=\\\"{ selected: config.activeTab == 'options'}\\\">\\n                    <img src=\\\"images/gear.png\\\" title=\\\"Options\\\" /> <span>Options</span>\\n                </a>\\n            </nav>\\n\\n\\n            <nav id=\\\"TopMenu\\\" class=\\\"pull-right\\\">\\n                <form style=\\\"float: left; width: 140px; padding-top: 2px;\\\">\\n                    <input id=\\\"SearchBox\\\" type=\\\"text\\\"\\n                           class=\\\"form-control\\\" placeholder=\\\"Search...\\\"\\n                           name=\\\"searchText\\\"\\n                           [(ngModel)]=\\\"config.searchText\\\"\\n                           *ngIf=\\\"config.isSearchAllowed\\\">\\n                </form>\\n            </nav>\\n        </div>\\n    </div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {AppConfiguration} from \"../business/appConfiguration\";\n\n@Component({\n    //moduleId: module.id,\n    selector: 'app-header',\n    templateUrl: 'appHeader.html'\n})\nexport class AppHeader implements OnInit {\n    constructor(public config:AppConfiguration) {\n    }\n\n    ngOnInit() {\n     }\n\n}\n","\nimport {Injectable, Component, OnInit, Input} from '@angular/core';\nimport {Response} from \"@angular/http\";\nimport {Observable, throwError}  from 'rxjs';\n\n/**\n *   A Bootstrap based alert display\n */\n@Component({\n    //moduleId: module.id,\n    selector: 'error-display',\n    //templateUrl: 'errorDisplay.html'\n    template: `\n        <div *ngIf=\"error.message\"\n             class=\"alert alert-{{error.icon}} alert-dismissable\">\n            <button *ngIf=\"error.dismissable\" type=\"button\" class=\"close\"\n                    data-dismiss=\"alert\" aria-hidden=\"true\">\n                <i class=\"fa fa-remove\"></i>\n            </button>\n\n            <div *ngIf=\"error.header\" style=\"font-size: 1.5em; font-weight: bold\">\n                <i class=\"fa fa-{{error.imageIcon}}\" style=\"color: {{error.iconColor}}\"></i>\n                {{error.header}}\n            </div>\n            <i *ngIf=\"!error.header\"\n               class=\"fa fa-{{error.imageIcon}}\"\n               style=\"color: {{error.iconColor}}\"></i>\n\n            <strong>{{error.message}}</strong>\n        </div>\n    `\n})\n\nexport class ErrorDisplay implements OnInit {\n    constructor() {\n    }\n\n    /**\n     * Error object that is bound to the component.\n     * @type {ErrorInfo}\n     */\n    @Input() error: ErrorInfo = new ErrorInfo();\n\n    ngOnInit() {\n    }\n}\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class ErrorInfo {\n    constructor() {\n        this.reset();\n    }\n\n    message: string;\n    icon: string;\n    dismissable: boolean;\n    header: string;\n    imageIcon: string;\n    iconColor: string;\n\n    response: Response = null;\n\n    reset() {\n        this.message = \"\";\n        this.header = \"\";\n        this.dismissable = false;\n        this.icon = \"warning\";\n        this.imageIcon = \"warning\";\n        this.iconColor = \"inherit\";\n    }\n\n    /**\n     * Low level method to set message properties\n     * @param msg - the message to set to\n     * @param icon? - sets the icon property (warning*)\n     * @param iconColor? - sets the icon color (left as is)\n     */\n    show(msg: string, icon?: string, iconColor?: string) {\n        this.message = msg;\n        this.icon = icon ? icon : \"warning\";\n        if (iconColor)\n            this.iconColor = iconColor;\n\n        this.fixupIcons();\n\n\n        // if(this.icon == \"warning\")\n        //   toastr.warning(this.message);\n        // if(this.icon == \"info\")\n        //   toastr.info(this.message);\n        // if (this.icon == \"success\")\n        //   toastr.success(this.message);\n    }\n\n    /**\n     * Displays an error alert\n     * @param msg  - Either a message string or error object with .message property\n     */\n    error(msg) {\n        if (typeof(msg) === 'object' && msg.message)\n            this.message = msg.message;\n        else\n            this.message = msg;\n\n        this.show(this.message, \"warning\");\n    }\n\n    /**\n     * DIsplays an info style alert\n     * @param msg - message to display\n     */\n    info(msg) {\n        this.show(msg, \"info\");\n    }\n\n    /**\n     * Fixes up icons and colors based on standard icon settings\n     * this method is called in internally after any of the helper\n     * methods are called. You can call this when setting any icon\n     * related properties manually.\n     */\n    fixupIcons() {\n        var err = this;\n\n        if (err.icon === \"info\")\n            err.imageIcon = \"info-circle\";\n        if (err.icon === \"error\" || err.icon === \"danger\" || err.icon === \"warning\") {\n            err.imageIcon = \"warning\";\n            err.iconColor = \"firebrick\";\n        }\n        if (err.icon === \"success\") {\n            err.imageIcon = \"check\";\n            err.iconColor = \"green\";\n        }\n    }\n\n    /**\n     * Parse a toPromise() .catch() clause error\n     * from a response object and returns an errorInfo object\n     * @param response\n     * @returns {Promise<void>|Promise<T>}\n     */\n    parsePromiseResponseError(response) {\n\n        if (response.hasOwnProperty(\"message\"))\n            return Promise.reject(response);\n        if (response.hasOwnProperty(\"Message\")) {\n            response.message = response.Message;\n            return Promise.reject(response);\n        }\n\n        let err = new ErrorInfo();\n        err.response = response;\n        err.message = response.statusText;\n\n        try {\n            let data = response.json();\n            if (data && data.message)\n                err.message = data.message;\n        }\n        catch (ex) {\n\n        }\n\n        return Promise.reject(err);\n    }\n\n    parseObservableResponseError(response): Observable<any> {\n        let err = new ErrorInfo();\n\n        // HttpClient has an `error` property for raw JSON response\n        if (response.hasOwnProperty(\"error\")) {\n\n            try {\n                err = JSON.parse(response.error);\n            } catch(ex) { }\n\n            if(err.hasOwnProperty(\"message\"))\n                return throwError(err);\n            if (err.hasOwnProperty(\"Message\"))\n            {\n                err.message = err[\"Message\"];\n                return throwError(err);\n            }\n        }\n        if (response.hasOwnProperty(\"message\"))\n            return Observable.throw(response);\n        if (response.hasOwnProperty(\"Message\")) {\n            response.message = response.Message;\n            return throwError(response);\n        }\n\n        err.response = response;\n        err.message = response.statusText;\n\n        try {\n            let data = response.json();\n            if (data && data.message)\n                err.message = data.message;\n        }\n        catch (ex) {\n        }\n\n        if (!err.message)\n            err.message = \"Unknown server failure.\";\n\n        return throwError(err);        \n    }\n}\n","module.exports = \"<div class=\\\"container\\\">\\n\\n  <div class=\\\"page-header-text\\\">\\n    AlbumViewer Login\\n  </div>\\n\\n  <error-display [error]=\\\"error\\\"></error-display>\\n\\n  <div id=\\\"WebLogin\\\" class=\\\"panel panel-primary\\\">\\n    <div class=\\\"panel-heading\\\">\\n      Please sign in\\n    </div>\\n\\n\\n    <form class=\\\"panel-body\\\" name=\\\"form1\\\" #form1=\\\"ngForm\\\">\\n      <div class=\\\"form-group\\\">\\n          <div class=\\\"input-group\\\">\\n              <div class=\\\"input-group-addon\\\">\\n                <i class=\\\"fa fa-fw fa-user\\\"></i>\\n              </div>\\n              <input type=\\\"text\\\" name=\\\"WebLogin_txtUsername\\\"\\n                   id=\\\"WebLogin_txtUsername\\\"\\n                   class=\\\"form-control\\\"\\n                   placeholder=\\\"Enter your user name\\\"\\n                   [(ngModel)]=\\\"username\\\"\\n                   autocapitalize=\\\"off\\\"\\n                   autocomplete=\\\"off\\\"\\n                   spellcheck=\\\"false\\\"\\n                   autocorrect=\\\"off\\\" required />\\n          </div>\\n      </div>\\n\\n      <div class=\\\"form-group\\\">\\n        <div class=\\\"input-group\\\">\\n          <div class=\\\"input-group-addon\\\">\\n            <i class=\\\"fa fa-fw fa-unlock-alt\\\"></i>\\n          </div>\\n          <input type=\\\"password\\\" name=\\\"password\\\"\\n                 id=\\\"password\\\"\\n                 class=\\\"form-control\\\"\\n                 placeholder=\\\"Enter your password\\\"\\n                 [(ngModel)]=\\\"password\\\"\\n                 autocapitalize=\\\"off\\\"\\n                 autocomplete=\\\"off\\\"\\n                 spellcheck=\\\"false\\\"\\n                 autocorrect=\\\"off\\\"\\n                 required />\\n        </div>\\n      </div>\\n      <div class=\\\"small \\\" >You can use: uid: test / pwd: test</div>\\n      <hr />\\n\\n      <button class=\\\"btn btn-primary\\\"\\n              type=\\\"button\\\"\\n              (click)=\\\"login()\\\"\\n              [disabled]=\\\"form1.invalid || form1.pristine\\\" >\\n        <i class=\\\"fa fa-unlock-alt\\\"></i>\\n        Login\\n      </button>\\n\\n      <div class=\\\"pull-right\\\">\\n        <button class=\\\"btn btn-default btn-sm pull-right\\\" style=\\\"display:block\\\"\\n                type=\\\"button\\\"\\n                (click)=\\\"logout()\\\" [disabled]=\\\"!user.isAuthenticated\\\">\\n          <i class=\\\"fa fa-unlock-alt\\\"></i>\\n          Logout\\n        </button>\\n      </div>\\n\\n    </form>\\n\\n  </div>\\n\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {UserInfo} from \"../business/userInfo\";\nimport {ErrorInfo} from \"./errorDisplay\";\n\ndeclare var toastr:any;\n\nimport {ActivatedRoute, Router} from \"@angular/router\";\n\n@Component({\n    //moduleId: module.id,\n    selector: 'login',\n    templateUrl: 'login.html'\n})\nexport class LoginComponent implements OnInit {\n    username:string = \"\";\n    password:string = \"\";\n    error: ErrorInfo = new ErrorInfo();\n\n    constructor(public user:UserInfo,\n                private route:ActivatedRoute,\n                private router: Router)\n    {  }\n\n    ngOnInit() {\n\n      if (this.route.snapshot.url[0].path == \"logout\")\n        this.logout();\n    }\n\n    login() {\n      this.user.login(this.username,this.password)\n        .subscribe(() => {\n            this.user.isAuthenticated = true;\n            toastr.success(\"You are logged in.\");\n            this.router.navigate([\"/albums\"]);\n        },\n        (err)=> {\n          this.error.error(err);\n          this.password=\"\";\n          toastr.warning(\"Login failed: \" + err.message);\n        });\n    }\n\n    logout() {\n        this.user.logout()\n          .subscribe((success) => {\n            toastr.success(\"Logged out.\");\n            this.router.navigate([\"/albums\"]);\n          });\n    }\n\n}\n","module.exports = \"<div class=\\\"container\\\">\\n  <style>\\n    h4 {\\n      color: steelblue;\\n      font-weight: bold;\\n    }\\n  </style>\\n  <div class=\\\"page-header-text\\\">\\n    <i class=\\\"fa fa-info-circle\\\"></i>  About the AlbumViewer Sample\\n  </div>\\n\\n  <div class=\\\"well well-sm\\\">\\n    <h4>ASP.NET Core API backend</h4>\\n    <p>\\n      This application runs an ASP.NET Core 2.0 API server with a\\n      JSON Service backend . \\n    </p>\\n  </div>\\n\\n  <div class=\\\"well well-sm\\\">\\n    <h4>Angular (5.x) Front End</h4>\\n    <p>\\n      The client interface uses Angular 5.x to provide the front end logic and\\n      UI management features. There are album and artist services that\\n      talk to the backend interface and page level components and child\\n      components that handle individual view pages of the application.\\n    </p>\\n  </div>\\n\\n  <div class=\\\"well well-sm\\\">\\n    <h4>Mobile enabled based on modified Bootstrap Interface</h4>\\n    <p>\\n      The base Bootstrap framework is used for the core UI features\\n      of the interface. The base template has been customized for\\n      this application.\\n    </p>\\n    <p>\\n      The application is mobile focused and uses custom resizing\\n      and toolbar relocation based on the screen/device size used.\\n      The application should be comfortably usable from phone up to full screen\\n      desktop applications.\\n    </p>\\n  </div>\\n\\n  <hr />\\n  <a routerLink=\\\"/albums\\\">Back to Application</a>\\n\\n</div>\\n\"","import {Component} from '@angular/core';\n\n@Component({\n  selector: 'about',\n  templateUrl: 'about.html'\n})\nexport class AboutComponent {\n\n}\n","module.exports = \"<div  class=\\\"container\\\">\\n  \\n  <error-display [error]=\\\"error\\\"></error-display>\\n\\n  <div class=\\\"list-group\\\" style=\\\"margin-top: 20px;\\\">\\n      <style>\\n          .list-group .fa { color: steelblue; font-size: 1.3em;padding-right: 15px;}\\n      </style>\\n    <a  href=\\\"javascript:{}\\\" (click)=\\\"reloadData()\\\" class=\\\"list-group-item\\\">\\n      <h4 class=\\\"list-group-item-heading\\\">\\n        <i class=\\\"fa fa-fw fa-refresh\\\"></i>\\n        Reset Data\\n      </h4>\\n      <p class=\\\"list-group-item-text\\\">Reset data to original sample data.</p>\\n    </a>\\n    <a routerLink=\\\"/about\\\" class=\\\"list-group-item\\\">\\n      <h4 class=\\\"list-group-item-heading\\\">\\n        <i class=\\\"fa fa-fw fa-info-circle\\\"></i>\\n        About Album Viewer\\n      </h4>\\n      <p>\\n        <small *ngIf=\\\"config.applicationStats.OsPlatform\\\">Server Platform: {{config.applicationStats.OsPlatform}}</small><br/>\\n        <small *ngIf=\\\"config.applicationStats.AspDotnetVersion\\\">ASP.NET Version: {{config.applicationStats.AspDotnetVersion}}</small><br/>\\n        <small *ngIf=\\\"config.applicationStats.AngularVersion\\\">Angular Version: {{config.applicationStats.AngularVersion}}</small><br>\\n        <small *ngIf=\\\"config.applicationStats.DataMode\\\">Data Mode: {{config.applicationStats.DataMode}}</small>\\n      </p>\\n    </a>\\n    <a href=\\\"index.htm\\\" class=\\\"list-group-item\\\">\\n      <h4>\\n        <i class=\\\"fa fa-fw fa-home\\\"></i>\\n        Back to Album List\\n      </h4>\\n    </a>\\n    <a href=\\\"https://github.com/RickStrahl/AlbumViewerVNext\\\" class=\\\"list-group-item\\\">\\n        <h4>\\n          <i class=\\\"fa fa-fw fa-github\\\"></i>\\n          GitHub \\n        </h4>\\n      </a>\\n      \\n    <div class=\\\"list-group-item\\\">\\n      <h4><i class=\\\"fa fa-fw fa-gears\\\"></i> Settings</h4>\\n\\n      <div class=\\\"form-group\\\">\\n        <label class=\\\"control-label\\\" for=\\\"httpBaseUrl\\\">Data Http Base URL:</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"httpBaseUrl\\\"\\n               placeholder=\\\"Data Http BaseUrl\\\" [(ngModel)]=\\\"config.urls.baseUrl\\\">\\n      </div>\\n    </div>\\n\\n    <a *ngIf=\\\"!user.isAuthenticated\\\" routerLink=\\\"/login\\\" class=\\\"list-group-item\\\">\\n      <h4 class=\\\"list-group-item-heading\\\">\\n        <i class=\\\"fa fa-unlock-alt\\\"></i>\\n        Sign in\\n      </h4>\\n    </a>\\n    <a *ngIf=\\\"user.isAuthenticated\\\" routerLink=\\\"/logout\\\" class=\\\"list-group-item\\\">\\n      <h4 class=\\\"list-group-item-heading\\\">\\n        <i class=\\\"fa fa-lock\\\"></i>\\n        Sign out\\n      </h4>\\n    </a>\\n  </div>\\n\\n</div>\\n\"","﻿import { Component, OnInit } from '@angular/core';\nimport {AppConfiguration} from \"../business/appConfiguration\";\nimport {UserInfo} from \"../business/userInfo\";\nimport {ErrorInfo} from \"../common/errorDisplay\";\nimport {HttpClient } from \"@angular/common/http\";\nimport { ApplicationStats } from '../business/entities';\n\ndeclare var $:any;\ndeclare var toastr:any;\ndeclare var window: any;\n\n@Component({\n    selector: 'options',\n    templateUrl: 'options.html'    \n})\nexport class OptionsComponent implements OnInit {\n    error: ErrorInfo = new ErrorInfo();\n\n    constructor(public config: AppConfiguration,\n                public user: UserInfo,\n                private http: HttpClient) {\n    }\n\n    ngOnInit() {\n        this.config.isSearchAllowed = false;\n\n        if (this.config.applicationStats.OsPlatform == null) {\n            this.http.get<ApplicationStats>(this.config.urls.url(\"applicationStats\"))\n\t\t\t\t.subscribe(stats => {\n                        this.config.applicationStats = stats;\n                        \n                        var $ngv = $(\"[ng-version]\");\n                        if ($ngv.length > 0)\n                            this.config.applicationStats.AngularVersion = $ngv.attr(\"ng-version\");\n                    \n                },response=> {\n\t\t\t\t\tlet obsErr = new ErrorInfo().parseObservableResponseError(response);\n\t\t\t\t\tlet msg = (<any> obsErr).error.message;\n\t\t\t\t\ttoastr.error(\"Get Application Stats failed: \" + msg);\n\t\t\t\t});\n        }\n    }\n\n    reloadData() {\n        if (!this.user.isAuthenticated)\n            window.location.hash = \"login\";\n\n        this.http.get<boolean>(this.config.urls.url(\"reloadData\") )\n\t\t\t.subscribe(\n                success => {                    \n                    if (success)\n                        toastr.success(\"Data has been reloaded.\");\n                    else\n                        toastr.error(\"Unable to reload data\");\n                }, response => {\n                    let obsErr = new ErrorInfo().parseObservableResponseError(response);\n                    let msg = (<any> obsErr).error.message;\n                    toastr.error(\"Data reload failed: \" + msg);\n\n                    return obsErr;\n                });\n    }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n"],"sourceRoot":""}